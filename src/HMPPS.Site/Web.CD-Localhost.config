<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->
    <configSections>
        <sectionGroup name="nwebsec" xdt:Transform="Insert">
            <!-- For information on how to configure NWebsec please visit: https://docs.nwebsec.com/ -->
            <section name="httpHeaderSecurityModule" type="NWebsec.Modules.Configuration.HttpHeaderSecurityConfigurationSection, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <appSettings file="WebAppSettings.CD-Localhost.config"  xdt:Transform="SetAttributes">
        <add key="Telerik.AsyncUpload.ConfigurationEncryptionKey" value="" xdt:Transform="Remove" xdt:Locator="Match(key)" />
        <add key="Telerik.Upload.ConfigurationHashKey" value="" xdt:Transform="Remove" xdt:Locator="Match(key)" />
        <add key="Telerik.Web.UI.DialogParametersEncryptionKey" value="" xdt:Transform="Remove" xdt:Locator="Match(key)" />

        <!--Authentication-->
        <!-- The OAUTH2 client ID -->
        <!--<add key="HMPPS.Authentication.ClientId" value="SET IN WebAppSettings.CD-Localhost.config" xdt:Transform="Insert"/>
        --><!-- The OAUTH2 client secret --><!--
        <add key="HMPPS.Authentication.ClientSecret" value="SET IN WebAppSettings.CD-Localhost.config" xdt:Transform="Insert"/>-->
        <!-- The URL that the identity provider posts the token back to, absolute URL -->
        <add key="HMPPS.Authentication.SignInCallbackUrl" value="https://hmpps-cd.localhost/auth-callback" xdt:Transform="Insert"/>
        <!-- The URL that handles log out -->
        <add key="HMPPS.Authentication.LogoutUrl" value="https://hmpps-cd.localhost/logout" xdt:Transform="Insert" />
        <!-- The temp cookie of IDAM login process-->
        <add key="HMPPS.Authentication.TempCookieName" value="TempCookieLocalCd" xdt:Transform="Insert" />
        <!-- The OAUTH2 claims to request -->
        <add key="HMPPS.Authentication.Scope" value="openid profile email" xdt:Transform="Insert"/>
        <!-- The OAUTH2 issuer (base URL) -->
        <add key="HMPPS.Authentication.ValidIssuer" value="https://51.141.55.159:8080/openam/oauth2" xdt:Transform="Insert"/>
        <!-- The OAUTH2 authorize endpoint -->
        <add key="HMPPS.Authentication.AuthorizeEndpoint" value="https://51.141.55.159:8080/openam/oauth2/authorize" xdt:Transform="Insert"/>
        <!-- The OAUTH2 token endpoint -->
        <add key="HMPPS.Authentication.TokenEndpoint" value="https://51.141.55.159:8080/openam/oauth2/access_token" xdt:Transform="Insert"/>
        <!-- The OAUTH2 logout endpoint -->
        <add key="HMPPS.Authentication.LogoutEndpoint" value="https://51.141.55.159:8080/openam/XUI/#logout/" xdt:Transform="Insert"/>
    </appSettings>
    <nwebsec xdt:Transform="Insert">
        <httpHeaderSecurityModule>
            <redirectValidation enabled="false" />
            <securityHttpHeaders>
                <x-Frame-Options policy="SameOrigin"/>
                <strict-Transport-Security max-age="30" />
                <x-Content-Type-Options enabled="true" />
                <x-XSS-Protection policy="FilterEnabled" blockMode="true"/>
                <content-Security-Policy-Report-Only enabled="true">
                    <default-src self="true"/>
                    <script-src unsafeInline="true" unsafeEval="true" self="true">
                    </script-src>
                    <style-src unsafeInline="true" self="true" >
                    </style-src>
                    <img-src self="true">
                    </img-src>
                    <object-src self="true" />
                    <media-src self="true">
                        <add source="dphubdevtestdevstorage.blob.core.windows.net"/>
                        <add source="dphubdevtestsitestorage.blob.core.windows.net"/>
                    </media-src>
                    <frame-src self="true" >
                    </frame-src>
                    <font-src self="true" >
                        <add source="Data:"/>
                    </font-src>
                    <connect-src self="true">
                        <add source="dphubdevtestdevstorage.blob.core.windows.net"/>
                        <add source="dphubdevtestsitestorage.blob.core.windows.net"/>
                    </connect-src>
                    <frame-ancestors self="true" />
                    <report-uri enableBuiltinHandler="true"/>
                </content-Security-Policy-Report-Only>
            </securityHttpHeaders>
        </httpHeaderSecurityModule>
    </nwebsec>
  <system.web>
    <compilation xdt:Transform="SetAttributes" debug="true" />
        <authentication mode="None" xdt:Transform="Replace" >
            <forms name=".ASPXAUTH" cookieless="UseCookies" requireSSL="true" />
        </authentication>
        <sessionState mode="Custom" customProvider="redis" xdt:Transform="SetAttributes(mode,customProvider)" xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
            <providers>
                <add name="redis" xdt:Locator="Match(name)" xdt:Transform="RemoveAttributes(compression)" />
                <add name="redis" xdt:Locator="Match(name)" applicationName="private" connectionString="redis.sessions" xdt:Transform="SetAttributes(applicationName,connectionString)" />
            </providers>
        </sessionState>
        <httpCookies httpOnlyCookies="false" requireSSL="true" xdt:Transform="Insert" />
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
    <customErrors defaultRedirect="Error500.aspx" mode="RemoteOnly" xdt:Transform="Replace">
      <error statusCode="500" redirect="Error500.aspx"/>
      <error statusCode="403" redirect="Error403.aspx"/>
    </customErrors>
  </system.web>
  <system.webServer>


    <modules runAllManagedModulesForAllRequests="true">
      <add type="Sitecore.Analytics.Media.MediaRequestSessionModule, Sitecore.Analytics" name="MediaRequestSessionModule" xdt:Locator="Match(name)" xdt:Transform="Remove" />
      <add type="Sitecore.Analytics.RobotDetection.Media.MediaRequestSessionModule, Sitecore.Analytics.RobotDetection" name="MediaRequestSessionModule" xdt:Transform="Insert"/>
            <add name="NWebsecHttpHeaderSecurityModule" type="NWebsec.Modules.HttpHeaderSecurityModule, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" xdt:Transform="Insert"/>
    </modules>
    <handlers>
      <add verb="*" path="sitecore_media.ashx" xdt:Transform="Remove" xdt:Locator="Match(path)" type="Sitecore.Resources.Media.MediaRequestHandler, Sitecore.Kernel" name="Sitecore.MediaRequestHandler" />
      <add verb="*" path="sitecore_media.ashx" xdt:Transform="Insert" type="HMPPS.MediaLibrary.CloudStorage.Media.MediaRequestHandler, HMPPS.MediaLibrary.CloudStorage" name="Sitecore.MediaRequestHandler"/>
      <add name="Telerik_Web_UI_DialogHandler_aspx" verb="*" preCondition="integratedMode" path="Telerik.Web.UI.DialogHandler.aspx" type="Telerik.Web.UI.DialogHandler" xdt:Transform="Remove" xdt:Locator="Match(name)" />
      <add name="Telerik_Web_UI_SpellCheckHandler_axd" verb="*" preCondition="integratedMode" path="Telerik.Web.UI.SpellCheckHandler.axd" type="Telerik.Web.UI.SpellCheckHandler" xdt:Transform="Remove" xdt:Locator="Match(name)" />
      <add name="Telerik_Web_UI_WebResource_axd" verb="*" preCondition="integratedMode" path="Telerik.Web.UI.WebResource.axd" type="Telerik.Web.UI.WebResource" xdt:Transform="Remove" xdt:Locator="Match(name)" />

    </handlers>
    <rewrite>
      <rules>
        <rule name="Root Hit Force HTTPS Redirection" enabled="true" stopProcessing="true">
          <match url="^$" ignoreCase="false" />
          <conditions>
            <add input="{HTTPS}" pattern="^OFF$" />
            <add input="{HTTP_METHOD}" pattern="GET" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/" redirectType="Permanent" />
        </rule>
        <rule name="Sitecore Login or Admin Force HTTPS Redirection" enabled="true" stopProcessing="true" xdt:Transform="Replace" xdt:Locator="Match(name)">
          <match url="^(sitecore/(login|admin))$" />
          <conditions>
            <add input="{HTTPS}" pattern="^OFF$" />
            <add input="{HTTP_METHOD}" pattern="GET" />
          </conditions>
          <action type="Redirect" url="https://{HTTP_HOST}/" appendQueryString="false" redirectType="Permanent" />
        </rule>
        <rule name="Forbidden" enabled="true" stopProcessing="true">
          <match url="(.*)" />
          <conditions>
            <add input="{HTTPS}" pattern="^OFF$" />
            <add input="{HTTP_METHOD}" pattern="GET" />
          </conditions>
          <action type="CustomResponse" statusCode="403" subStatusCode="0" />
        </rule>
      </rules>
            <outboundRules xdt:Transform="Insert">
                <rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
                    <match serverVariable="RESPONSE_Strict_Transport_Security" pattern=".*" />
                    <conditions>
                        <add input="{HTTPS}" pattern="on" ignoreCase="true" />
                    </conditions>
                    <action type="Rewrite" value="max-age=31536000" />
                </rule>
            </outboundRules>
    </rewrite>
        <httpProtocol>
            <customHeaders>
                <clear />
            </customHeaders>
        </httpProtocol>
        <security>
            <requestFiltering>
                <hiddenSegments>
                    <add segment="NWebsecConfig" />
                </hiddenSegments>
            </requestFiltering>
        </security>
  </system.webServer>
  <location path="sitecore/shell" xdt:Transform="Remove" xdt:Locator="Match(path)">
    <system.web>
      <authorization>
        <deny users="?" />
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/admin" xdt:Transform="Remove" xdt:Locator="Match(path)">
    <system.web>
      <authorization>
        <deny users="?" />
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location path="sitecore" xdt:Transform="InsertAfter(/configuration/system.webServer)">
    <system.web>
      <authorization>
        <deny users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/api" xdt:Transform="InsertAfter(/configuration/location[@path='sitecore'])">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/service" xdt:Transform="InsertAfter(/configuration/location[@path='sitecore/api'])">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/shell/themes" xdt:Transform="InsertAfter(/configuration/location[@path='sitecore/service'])">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/shell" xdt:Transform="Remove" xdt:Locator="Match(path)">
    <system.web>
      <authorization>
        <deny users="?" />
        <allow users="*" />
      </authorization>
    </system.web>
  </location>
  <location xdt:Locator="Match(path)" path="sitecore/api" xdt:Transform="Replace">
    <system.web>
      <authorization>
        <allow users="*" xdt:Transform="Replace" />
      </authorization>
    </system.web>
  </location>
  <location xdt:Locator="Match(path)" path="sitecore/service" xdt:Transform="Replace">
    <system.web>
      <authorization>
        <allow users="*" xdt:Transform="Replace" />
      </authorization>
    </system.web>
  </location>
  <location xdt:Locator="Match(path)" path="sitecore/shell/themes" xdt:Transform="Replace">
    <system.web>
      <authorization>
        <allow users="*" xdt:Transform="Replace" />
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/shell/Themes/Standard" xdt:Locator="Match(path)" xdt:Transform="Remove">
    <system.web>
      <authorization>
        <allow users="?" />
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/shell/controls/Lib" xdt:Locator="Match(path)" xdt:Transform="Remove">
    <system.web>
      <authorization>
        <allow users="?" />
      </authorization>
    </system.web>
  </location>
  <location path="sitecore/shell/client/Speak" xdt:Locator="Match(path)" xdt:Transform="Remove">
    <system.web>
      <authorization>
        <allow users="?" />
      </authorization>
    </system.web>
  </location>
</configuration>
