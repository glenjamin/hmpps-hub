<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
    <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->
    <appSettings file="WebAppSettings.CMS-Localhost.config" xdt:Transform="SetAttributes">
        <!--Authentication-->
        <!-- The OAUTH2 client ID --><!--
        <add key="HMPPS.Authentication.ClientId" value="SET IN WebAppSettings.CMS-Localhost.config" xdt:Transform="Insert"/>
        --><!-- The OAUTH2 client secret --><!--
        <add key="HMPPS.Authentication.ClientSecret" value="SET IN WebAppSettings.CMS-Localhost.config" xdt:Transform="Insert"/>-->
        <!-- The URL that the identity provider posts the token back to, absolute URL -->
        <add key="HMPPS.Authentication.SignInCallbackUrl" value="https://hmpps-cms.localhost/auth-callback" xdt:Transform="Insert"/>
        <!-- The URL that handles log out -->
        <add key="HMPPS.Authentication.LogoutUrl" value="https://hmpps-cms.localhost/logout" xdt:Transform="Insert" />
        <!-- The temp cookie of IDAM login process-->
        <add key="HMPPS.Authentication.TempCookieName" value="TempCookieLocalCms" xdt:Transform="Insert" />
        <!-- The OAUTH2 claims to request -->
        <add key="HMPPS.Authentication.Scope" value="openid profile email" xdt:Transform="Insert"/>
        <!-- The OAUTH2 issuer (base URL) -->
        <add key="HMPPS.Authentication.ValidIssuer" value="https://51.141.55.159:8080/openam/oauth2" xdt:Transform="Insert"/>
        <!-- The OAUTH2 authorize endpoint -->
        <add key="HMPPS.Authentication.AuthorizeEndpoint" value="https://51.141.55.159:8080/openam/oauth2/authorize" xdt:Transform="Insert"/>
        <!-- The OAUTH2 token endpoint -->
        <add key="HMPPS.Authentication.TokenEndpoint" value="https://51.141.55.159:8080/openam/oauth2/access_token" xdt:Transform="Insert"/>
        <!-- The OAUTH2 logout endpoint -->
        <add key="HMPPS.Authentication.LogoutEndpoint" value="https://51.141.55.159:8080/openam/XUI/#logout/" xdt:Transform="Insert"/>
    </appSettings>
    <system.web>
        <compilation xdt:Transform="SetAttributes" debug="true" />
    <authentication mode="Forms" xdt:Transform="Replace" >
      <forms name=".ASPXAUTH" cookieless="UseCookies" loginUrl="Sitecore/login" requireSSL="true" />
    </authentication>
    <httpCookies httpOnlyCookies="false" requireSSL="true" xdt:Transform="Insert" />
        <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
        <customErrors defaultRedirect="Error500.aspx" mode="RemoteOnly" xdt:Transform="Replace">
            <error statusCode="500" redirect="Error500.aspx"/>
            <error statusCode="403" redirect="Error403.aspx"/>
        </customErrors>
    </system.web>
    <system.webServer>
        <handlers>
            <add verb="*" path="sitecore_media.ashx" xdt:Transform="Remove" xdt:Locator="Match(path)" type="Sitecore.Resources.Media.MediaRequestHandler, Sitecore.Kernel" name="Sitecore.MediaRequestHandler" />
            <add verb="*" path="sitecore_media.ashx" xdt:Transform="Insert" type="HMPPS.MediaLibrary.CloudStorage.Media.MediaRequestHandler, HMPPS.MediaLibrary.CloudStorage" name="Sitecore.MediaRequestHandler"/>
        </handlers>
    <rewrite>
      <outboundRules xdt:Transform="Insert">
        <rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
          <match serverVariable="RESPONSE_Strict_Transport_Security" pattern=".*" />
          <conditions>
            <add input="{HTTPS}" pattern="on" ignoreCase="true" />
          </conditions>
          <action type="Rewrite" value="max-age=31536000" />
        </rule>
      </outboundRules>
    </rewrite>
    <httpProtocol>
      <customHeaders>
        <remove name="X-Frame-Options" xdt:Transform="Insert" />
        <add name="X-Frame-Options" value="sameorigin" xdt:Transform="Insert" />
        <remove name="X-Content-Type-Options" xdt:Transform="Insert" />
        <add name="X-Content-Type-Options" value="nosniff" xdt:Transform="Insert" />
        <remove name="Strict-Transport-Security" xdt:Transform="Insert" />
        <add name="Strict-Transport-Security" value="max-age=31536000" xdt:Transform="Insert" />
        <remove name="X-Xss-Protection" xdt:Transform="Insert" />
        <add name="X-Xss-Protection" value="1;mode=block" xdt:Transform="Insert" />
      </customHeaders>
    </httpProtocol>
    </system.webServer>
</configuration>
