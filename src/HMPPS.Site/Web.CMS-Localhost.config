<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
    <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->
    <configSections>
        <sectionGroup name="nwebsec" xdt:Transform="Insert">
            <!-- For information on how to configure NWebsec please visit: https://docs.nwebsec.com/ -->
            <section name="httpHeaderSecurityModule" type="NWebsec.Modules.Configuration.HttpHeaderSecurityConfigurationSection, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" requirePermission="false" />
        </sectionGroup>
    </configSections>
  <appSettings file="WebAppSettings.CMS-Localhost.config" xdt:Transform="SetAttributes">
    <!--Authentication-->
    <!-- The OAUTH2 client ID -->
    <!--
        <add key="HMPPS.Authentication.ClientId" value="SET IN WebAppSettings.CMS-Localhost.config" xdt:Transform="Insert"/>
        -->
    <!-- The OAUTH2 client secret -->
    <!--
        <add key="HMPPS.Authentication.ClientSecret" value="SET IN WebAppSettings.CMS-Localhost.config" xdt:Transform="Insert"/>-->
    <!-- The URL that the identity provider posts the token back to, absolute URL -->
    <add key="HMPPS.Authentication.SignInCallbackUrl" value="https://hmpps-cms.localhost/auth-callback" xdt:Transform="Insert"/>
    <!-- The URL that handles log out -->
    <add key="HMPPS.Authentication.LogoutUrl" value="https://hmpps-cms.localhost/logout" xdt:Transform="Insert" />
    <!-- The temp cookie of IDAM login process-->
    <add key="HMPPS.Authentication.TempCookieName" value="TempCookieLocalCms" xdt:Transform="Insert" />
    <!-- The OAUTH2 claims to request -->
    <add key="HMPPS.Authentication.Scope" value="openid profile email" xdt:Transform="Insert"/>
    <!-- The OAUTH2 issuer (base URL) -->
    <add key="HMPPS.Authentication.ValidIssuer" value="https://51.141.55.159:8080/openam/oauth2" xdt:Transform="Insert"/>
    <!-- The OAUTH2 authorize endpoint -->
    <add key="HMPPS.Authentication.AuthorizeEndpoint" value="https://51.141.55.159:8080/openam/oauth2/authorize" xdt:Transform="Insert"/>
    <!-- The OAUTH2 token endpoint -->
    <add key="HMPPS.Authentication.TokenEndpoint" value="https://51.141.55.159:8080/openam/oauth2/access_token" xdt:Transform="Insert"/>
    <!-- The OAUTH2 logout endpoint -->
    <add key="HMPPS.Authentication.LogoutEndpoint" value="https://51.141.55.159:8080/openam/XUI/#logout/" xdt:Transform="Insert"/>

    <!-- The Nomis API Base URL -->
    <add key="HMPPS.NomisApiService.BaseUrl" value="https://noms-api-dev.dsd.io/nomisapi" xdt:Transform="Insert"/>

    <!-- The Authentication Checker cookie name -->
    <add key="HMPPS.Utilities.UserDataCookieName" value="AuthenticationCheckerLocalCms"  xdt:Transform="Insert"/>
    <!-- The Authentication Checker cookie key -->
    <add key="HMPPS.Utilities.UserDataCookieKey" value="JwtToken"  xdt:Transform="Insert"/>
  </appSettings>
    <nwebsec xdt:Transform="Insert">
        <httpHeaderSecurityModule>
            <redirectValidation enabled="false" />
            <securityHttpHeaders>
                <x-Frame-Options policy="SameOrigin"/>
                <strict-Transport-Security max-age="30" />
                <x-Content-Type-Options enabled="false" />
                <!--if true, it breaks sitecore page editor-->
                <x-XSS-Protection policy="FilterEnabled" blockMode="true"/>
                <content-Security-Policy-Report-Only enabled="true">
                    <default-src self="true"/>
                    <script-src unsafeInline="true" unsafeEval="true" self="true">
                    </script-src>
                    <style-src unsafeInline="true" self="true" >
                        <add source="fonts.googleapis.com"/>
                    </style-src>
                    <img-src self="true">
                    </img-src>
                    <object-src self="true" />
                    <media-src self="true">
                        <add source="dphubdevtestdevstorage.blob.core.windows.net"/>
                        <add source="dphubdevtestsitestorage.blob.core.windows.net"/>
                    </media-src>
                    <frame-src self="true" >
                        <add source="sdn.sitecore.net"/>
                    </frame-src>
                    <font-src self="true" >
                        <add source="Data:"/>
                        <add source="fonts.gstatic.com"/>
                        <add source="fonts.googleapis.com"/>
                    </font-src>
                    <connect-src self="true">
                        <add source="dphubdevtestdevstorage.blob.core.windows.net"/>
                        <add source="dphubdevtestsitestorage.blob.core.windows.net"/>
                    </connect-src>
                    <frame-ancestors self="true" />
                    <report-uri enableBuiltinHandler="true"/>
                </content-Security-Policy-Report-Only>
            </securityHttpHeaders>
        </httpHeaderSecurityModule>
    </nwebsec>
    <system.web>
        <compilation xdt:Transform="SetAttributes" debug="true" />
    <authentication mode="Forms" xdt:Transform="Replace" >
      <forms name=".ASPXAUTH" cookieless="UseCookies" loginUrl="Sitecore/login" requireSSL="true" />
    </authentication>
    <httpCookies httpOnlyCookies="false" requireSSL="true" xdt:Transform="Insert" />
        <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
        <customErrors defaultRedirect="Error500.aspx" mode="RemoteOnly" xdt:Transform="Replace">
            <error statusCode="500" redirect="Error500.aspx"/>
            <error statusCode="403" redirect="Error403.aspx"/>
        </customErrors>
    </system.web>
    <system.webServer>
      <modules runAllManagedModulesForAllRequests="true">
          <add name="NWebsecHttpHeaderSecurityModule" type="NWebsec.Modules.HttpHeaderSecurityModule, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" xdt:Transform="Insert"/>
      </modules>
        <handlers>
            <add verb="*" path="sitecore_media.ashx" xdt:Transform="Remove" xdt:Locator="Match(path)" type="Sitecore.Resources.Media.MediaRequestHandler, Sitecore.Kernel" name="Sitecore.MediaRequestHandler" />
            <add verb="*" path="sitecore_media.ashx" xdt:Transform="Insert" type="HMPPS.MediaLibrary.CloudStorage.Media.MediaRequestHandler, HMPPS.MediaLibrary.CloudStorage" name="Sitecore.MediaRequestHandler"/>
        </handlers>
    <rewrite>
      <outboundRules xdt:Transform="Insert">
        <rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
          <match serverVariable="RESPONSE_Strict_Transport_Security" pattern=".*" />
          <conditions>
            <add input="{HTTPS}" pattern="on" ignoreCase="true" />
          </conditions>
          <action type="Rewrite" value="max-age=31536000" />
        </rule>
      </outboundRules>
    </rewrite>
    <httpProtocol>
      <customHeaders>
              <clear />
      </customHeaders>
    </httpProtocol>
      <security>
          <requestFiltering>
              <hiddenSegments>
                  <add segment="NWebsecConfig" />
              </hiddenSegments>
          </requestFiltering>
      </security>
    </system.webServer>
</configuration>
