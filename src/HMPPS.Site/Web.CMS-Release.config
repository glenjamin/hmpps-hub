<?xml version="1.0" encoding="utf-8"?>

<!-- For more information on using web.config transformation visit https://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
    <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an attribute "name" that has a value of "MyDB".
    
    <connectionStrings>
      <add name="MyDB" 
        connectionString="Data Source=ReleaseSQLServer;Initial Catalog=MyReleaseDB;Integrated Security=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>
  -->
    <configSections>
        <sectionGroup name="nwebsec" xdt:Transform="Insert">
            <!-- For information on how to configure NWebsec please visit: https://docs.nwebsec.com/ -->
            <section name="httpHeaderSecurityModule" type="NWebsec.Modules.Configuration.HttpHeaderSecurityConfigurationSection, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" requirePermission="false" />
        </sectionGroup>
    </configSections>
    <appSettings>
        <!--Azure web app setting-->
        <add key="WEBSITE_LOAD_USER_PROFILE" value="1" xdt:Transform="Insert"/>
        <!--Azure web app settings used to prevent site performance degredation. See https://kb.sitecore.net/articles/983839 -->
        <add key="WEBSITE_DYNAMIC_CACHE" value="0" xdt:Transform="Insert"/>
        <!-- Telerik keys -->
        <add key="Telerik.AsyncUpload.ConfigurationEncryptionKey" value="#{Hub-TelerikEncryptionKey}#" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
        <add key="Telerik.Upload.ConfigurationHashKey" value="#{Hub-TelerikEncryptionKey}#" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
        <add key="Telerik.Web.UI.DialogParametersEncryptionKey" value="#{Hub-TelerikEncryptionKey}#" xdt:Transform="SetAttributes" xdt:Locator="Match(key)"/>
        <!--Authentication-->
        <!-- The URL that the identity provider posts the token back to, absolute URL -->
        <add key="HMPPS.Authentication.SignInCallbackUrl" value="#{Hub-AuthSsoCallBackUrl}#" xdt:Transform="Insert"/>
        <!-- The URL that handles log out -->
        <add key="HMPPS.Authentication.LogoutUrl" value="#{Hub-LogoutUrl}#" xdt:Transform="Insert"/>
        <!-- The temp cookie of IDAM login process-->
        <add key="HMPPS.Authentication.TempCookieName" value="#{Hub-AuthTempCookieName}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 client ID -->
        <add key="HMPPS.Authentication.ClientId" value="#{Idam-ClientId}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 client secret -->
        <add key="HMPPS.Authentication.ClientSecret" value="#{Idam-ClientSecret}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 claims to request -->
        <add key="HMPPS.Authentication.Scope" value="#{Idam-Scope}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 issuer (base URL) -->
        <add key="HMPPS.Authentication.ValidIssuer" value="#{Idam-ValidIssuer}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 authorize endpoint -->
        <add key="HMPPS.Authentication.AuthorizeEndpoint" value="#{Idam-AuthorizeUrl}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 token endpoint -->
        <add key="HMPPS.Authentication.TokenEndpoint" value="#{Idam-TokenEndPoint}#" xdt:Transform="Insert"/>
        <!-- The OAUTH2 logout endpoint -->
        <add key="HMPPS.Authentication.LogoutEndpoint" value="#{Idam-LogOutUrl}#" xdt:Transform="Insert"/>
        <!-- The IDAM healthcheck endpoint -->
        <add key="HMPPS.Authentication.HealthCheckEndpoint" value="#{Idam-HealthCheckEndPoint}#" xdt:Transform="Insert"/>

        <!-- The Nomis API Base URL -->
        <add key="HMPPS.NomisApiService.BaseUrl" value="#{Nomis-ApiBaseUrl}#" xdt:Transform="Insert"/>
        <!-- The Nomis API client token -->
        <add key="HMPPS.NomisApiService.ClientToken" value="#{Nomis-ApiClientToken}#" xdt:Transform="Insert"/>
        <!-- The Nomis API secret key -->
        <add key="HMPPS.NomisApiService.SecretKey" value="#{Nomis-ApiSecretKey}#" xdt:Transform="Insert"/>

        <!-- The Jwt Token Security Key -->
        <add key="HMPPS.Utilities.JwtTokenSecurityKey" value="#{Hub-AuthSecurityKey}#" xdt:Transform="Insert"/>
        <!-- The Authentication Checker cookie name -->
        <add key="HMPPS.Utilities.UserDataCookieName" value="#{Hub-AuthCookieName}#" xdt:Transform="Insert"/>
        <!-- The Authentication Checker cookie key -->
        <add key="HMPPS.Utilities.UserDataCookieKey" value="JwtToken" xdt:Transform="Insert"/>
        <!-- Default .Net cache time (in sec)-->
        <add key="HMPPS.Utilities.DefaultDotNetCacheTime" value="300"  xdt:Transform="Insert"/>
        <!-- RadioEpisodes cache time (in sec)-->
        <add key="HMPPS.Utilities.RadioEpisodesCacheTime" value="1800"  xdt:Transform="Insert"/>

        <!--Azure blob provider for media-->
        <add key="HMPPS.MediaLibrary.AzureStorage.AccountName" value="#{Hub-MediaStorageAccountName}#" xdt:Transform="Insert"/>
        <add key="HMPPS.MediaLibrary.AzureStorage.AccountKey" value="#{Hub-MediaStorageAccountKey}#" xdt:Transform="Insert"/>
        <add key="HMPPS.MediaLibrary.CloudStorage.MediaLinkCdnServerUrl" value="#{Hub-MediaStorageAccountUrl}#" xdt:Transform="Insert"/>

        <add key="HMPPS.Site.HealthCheckOperations" value="SitecoreSql,SitecoreMongo,BlobStorage,AzureSearch" xdt:Transform="Insert"/>
    </appSettings>
    <nwebsec xdt:Transform="Insert">
        <httpHeaderSecurityModule>
            <redirectValidation enabled="false" />
            <securityHttpHeaders>
                <x-Frame-Options policy="SameOrigin"/>
                <strict-Transport-Security max-age="30" />
                <x-Content-Type-Options enabled="false" />
                <!--if true, it breaks sitecore page editor-->
                <x-XSS-Protection policy="FilterEnabled" blockMode="true"/>
                <content-Security-Policy enabled="true">
                    <default-src self="true"/>
                    <script-src unsafeInline="true" unsafeEval="true" self="true">
                        <add source="code.jquery.com"/>
                    </script-src>
                    <style-src unsafeInline="true" self="true" >
                        <add source="fonts.googleapis.com"/>
                        <add source="cdnjs.cloudflare.com"/>
                        <add source="blob:"/>
                        <add source="code.jquery.com"/>
                    </style-src>
                    <img-src self="true">
                        <add source="Data:"/>
                        <add source="blob:"/>
                        <add source="code.jquery.com"/>
                    </img-src>
                    <object-src self="true" />
                    <media-src self="true">
                        <add source="dphubdevtestdevstorage.blob.core.windows.net"/>
                        <add source="dphubdevtestsitestorage.blob.core.windows.net"/>
                    </media-src>
                    <child-src self="true" >
                        <add source="sdn.sitecore.net"/>
                        <add source="platform.komfo.com"/>
                        <add source="www.sitecore.net"/>
                    </child-src>
                    <font-src self="true" >
                        <add source="Data:"/>
                        <add source="fonts.gstatic.com"/>
                        <add source="fonts.googleapis.com"/>
                        <add source="blob:"/>
                    </font-src>
                    <connect-src self="true">
                        <add source="dphubdevtestdevstorage.blob.core.windows.net"/>
                        <add source="dphubdevtestsitestorage.blob.core.windows.net"/>
                    </connect-src>
                    <frame-ancestors self="true" />
                    <report-uri enableBuiltinHandler="true"/>
                </content-Security-Policy>
            </securityHttpHeaders>
        </httpHeaderSecurityModule>
    </nwebsec>
    <system.web>
        <membership defaultProvider="sitecore" hashAlgorithmType="SHA512" xdt:Transform="SetAttributes(hashAlgorithmType)" />
        <compilation xdt:Transform="RemoveAttributes(debug)" />
        <authentication mode="Forms" xdt:Transform="Replace" >
            <forms name=".ASPXAUTH" cookieless="UseCookies" loginUrl="Sitecore/login" requireSSL="true" />
        </authentication>
        <httpCookies httpOnlyCookies="true" requireSSL="true" xdt:Transform="Insert" />
        <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
        <customErrors defaultRedirect="500.aspx" mode="RemoteOnly" redirectMode="ResponseRewrite" xdt:Transform="Replace">
            <error statusCode="500" redirect="500.aspx"/>
            <error statusCode="403" redirect="403.aspx"/>
        </customErrors>
        <httpRuntime maxRequestLength="1048576" xdt:Transform="SetAttributes"></httpRuntime>
    </system.web>
    <system.webServer>
        <applicationInitialization doAppInitAfterRestart="true" xdt:Transform="Insert" >
            <add initializationPage="/status.aspx" />
        </applicationInitialization>
        <modules runAllManagedModulesForAllRequests="true">
            <add name="NWebsecHttpHeaderSecurityModule" type="NWebsec.Modules.HttpHeaderSecurityModule, NWebsec, Version=4.3.0.0, Culture=neutral, PublicKeyToken=3613da5f958908a1" xdt:Transform="Insert"/>
        </modules>
        <handlers>
            <add verb="*" path="sitecore_media.ashx" xdt:Transform="Remove" xdt:Locator="Match(path)" type="Sitecore.Resources.Media.MediaRequestHandler, Sitecore.Kernel" name="Sitecore.MediaRequestHandler" />
            <add verb="*" path="sitecore_media.ashx" xdt:Transform="Insert" type="HMPPS.MediaLibrary.CloudStorage.Media.MediaRequestHandler, HMPPS.MediaLibrary.CloudStorage" name="Sitecore.MediaRequestHandler"/>
            <add path="*.xml" verb="*" type="System.Web.HttpForbiddenHandler" name="xml (integrated)" preCondition="integratedMode" xdt:Transform="Insert"/>
            <add path="*.xslt" verb="*" type="System.Web.HttpForbiddenHandler" name="xslt (integrated)" preCondition="integratedMode" xdt:Transform="Insert"/>
            <add path="*.config.xml" verb="*" type="System.Web.HttpForbiddenHandler" name="config.xml (integrated)" preCondition="integratedMode" xdt:Transform="Insert"/>
            <add path="*.mrt" verb="*" type="System.Web.HttpForbiddenHandler" name="mrt (integrated)" preCondition="integratedMode" xdt:Transform="Insert"/>
            <add verb="*" path="sitecore_feed.ashx" type="Sitecore.Shell.Feeds.FeedRequestHandler, Sitecore.Kernel" name="Sitecore.FeedRequestHandler" xdt:Transform="Remove" xdt:Locator="Match(path)" />
        </handlers>
        <security>
            <requestFiltering>
                <requestLimits maxAllowedContentLength="1073741824"  xdt:Transform="SetAttributes"/>
                <hiddenSegments>
                    <add segment="NWebsecConfig" />
                </hiddenSegments>
            </requestFiltering>
            <ipSecurity xdt:Transform="Insert" allowUnlisted="false" denyAction="AbortRequest">
                <clear />
                <!--e3 office-->
                <add ipAddress="80.168.89.194" subnetMask="255.255.255.0" allowed="true" />
                <!--e3 build agent-->
                <add ipAddress="52.169.214.87" subnetMask="255.255.255.0" allowed="true" />
                <!--e3 test automation VM-->
                <add ipAddress="51.140.107.199" subnetMask="255.255.255.0" allowed="true" />
                <!--Sheffield office-->
                <add ipAddress="217.33.148.210" subnetMask="255.255.255.0" allowed="true" />
                <!--London MoJ office - Petty france wifi-->
                <add ipAddress="213.121.161.124" subnetMask="255.255.255.0" allowed="true" />
                <!--Internal network (in azure)-->
                <add ipAddress="10.0.0.0" subnetMask="255.255.255.0" allowed="true" />
            </ipSecurity>
        </security>
        <rewrite>
            <outboundRules xdt:Transform="Insert">
                <rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
                    <match serverVariable="RESPONSE_Strict_Transport_Security" pattern=".*" />
                    <conditions>
                        <add input="{HTTPS}" pattern="on" ignoreCase="true" />
                    </conditions>
                    <action type="Rewrite" value="max-age=31536000" />
                </rule>
            </outboundRules>
        </rewrite>
        <httpProtocol xdt:Transform="SetAttributes" allowKeepAlive="true">
            <customHeaders>
                <remove name="Referrer-Policy" xdt:Transform="Insert"/>
                <add name="Referrer-Policy" value="no-referrer-when-downgrade" xdt:Transform="Insert"/>
            </customHeaders>
        </httpProtocol>
        <staticContent xdt:Transform="Insert">
            <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="30.00:00:00"/>
        </staticContent>
        <urlCompression doStaticCompression="true" doDynamicCompression="true" xdt:Transform="Insert"/>
        <httpErrors errorMode="DetailedLocalOnly" existingResponse="Auto" xdt:Transform="Insert" >
            <remove statusCode="401" />
            <error statusCode="401" path="/401" responseMode="ExecuteURL" />
            <remove statusCode="403" />
            <error statusCode="403" path="/403" responseMode="ExecuteURL" />
            <remove statusCode="404" subStatusCode="-1" />
            <remove statusCode="500" />
            <error statusCode="404" path="404.html" responseMode="File" />
            <error statusCode="500" path="500.html" responseMode="File"/>
        </httpErrors>
    </system.webServer>
</configuration>
