<?xml version="1.0"?>
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  <sitecore>

    <settings>
      <setting name="Media.ThumbnailCacheFolder" value="/App_Data/MediaThumbnailCache/" />
      <setting name="Media.AlwaysIncludeCdnServerUrl" value="false" />
      <setting name="CloudMedia.MediaLinkCdnServerUrl" value="https://evadenborossitecoretest1.blob.core.windows.net/blobs" />
    </settings>


    <pipelines>
      <!-- Custom Pipeline to Process Media Items -->
      <cloud.MediaProcessor argsType="FS.MediaLibrary.CloudStorage.Pipelines.MediaProcessor.MediaProcessorArgs">
        <processor type="FS.MediaLibrary.CloudStorage.Pipelines.MediaProcessor.GenerateThumbnail, FS.MediaLibrary.CloudStorage" />
        <processor type="FS.MediaLibrary.CloudStorage.Pipelines.MediaProcessor.CalculateFileHash, FS.MediaLibrary.CloudStorage" />
        <processor type="FS.MediaLibrary.CloudStorage.Pipelines.MediaProcessor.UploadToCdn, FS.MediaLibrary.CloudStorage" />
      </cloud.MediaProcessor>

      <getMediaStream>
        <processor patch:before="*[1]" type="FS.MediaLibrary.CloudStorage.Pipelines.GetMediaStream.FileBasedThumbnailProcessor, FS.MediaLibrary.CloudStorage" />
      </getMediaStream>
    </pipelines>


    <processors>
      <uiUpload>
        <processor patch:before="*[1]" type="FS.MediaLibrary.CloudStorage.Pipelines.uiUpload.EnsureFileBasedMedia, FS.MediaLibrary.CloudStorage" mode="on">
          <config type="FS.MediaLibrary.CloudStorage.Configuration.LocationConfiguration, FS.MediaLibrary.CloudStorage">
            <locations  hint="list:AddLocation">
              <location type="FS.MediaLibrary.CloudStorage.Configuration.Location, FS.MediaLibrary.CloudStorage">
                <mediaFolder>/sitecore/media library/Files/audio</mediaFolder>
                <containerName>audio</containerName>
              </location>
              <location type="FS.MediaLibrary.CloudStorage.Configuration.Location, FS.MediaLibrary.CloudStorage">
                <mediaFolder>/sitecore/media library/Files/video</mediaFolder>
                <containerName>video</containerName>
              </location>
              <location type="FS.MediaLibrary.CloudStorage.Configuration.Location, FS.MediaLibrary.CloudStorage">
                <mediaFolder>/sitecore/media library/Files/game</mediaFolder>
                <containerName>game</containerName>
              </location>
              <location type="FS.MediaLibrary.CloudStorage.Configuration.Location, FS.MediaLibrary.CloudStorage">
                <mediaFolder>/sitecore/media library/Files/ebook</mediaFolder>
                <containerName>ebook</containerName>
              </location>
            </locations>
            <!-- *** Add as many media library locations as required to force those folders to upload to cloud storage ***
            <location>/sitecore/media library/CloudMedia</location> -->
          </config>
        </processor>
        <processor type="FS.MediaLibrary.CloudStorage.Pipelines.uiUpload.ProcessMedia, FS.MediaLibrary.CloudStorage" mode="on" patch:after="*[@type='Sitecore.Pipelines.Upload.Save, Sitecore.Kernel']" />
      </uiUpload>

      <attachFile>
        <processor type="FS.MediaLibrary.CloudStorage.Pipelines.AttachFile.DeletePreviousMedia, FS.MediaLibrary.CloudStorage" mode="on" patch:before="*[@type='Sitecore.Pipelines.Attach.UpdatePath,Sitecore.Kernel']" />
        <processor type="FS.MediaLibrary.CloudStorage.Pipelines.AttachFile.ProcessMedia, FS.MediaLibrary.CloudStorage" mode="on" />
      </attachFile>
    </processors>


    <events>
      <event name="item:deleting">
        <handler type="FS.MediaLibrary.CloudStorage.Events.MediaItemDeleting, FS.MediaLibrary.CloudStorage" method="OnItemDeleting"/>
      </event>
    </events>


    <mediaLibrary>
      <mediaProvider>
        <patch:attribute name="type">FS.MediaLibrary.CloudStorage.Media.MediaProvider, FS.MediaLibrary.CloudStorage</patch:attribute>
      </mediaProvider>
    </mediaLibrary>

  </sitecore>
</configuration>
